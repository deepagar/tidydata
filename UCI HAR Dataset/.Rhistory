ls
ls()
2
5
16
4
1
debug(ls)
ls()
str(str)
str(ls)
str(lm)
x <- rnorm(100, 2,4)
summary(x)
str(x)
f <- gl(40, 10)
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
m <- matrix(rnorm(100), 10, 10)
str(m)
m
summary(m)
m[, 1]
s <- split(airquality, airquality$Month)
str(s)
x <- rnorm(10)
x
x < rnorm(10, 20, 2)
x <- rnorm(10, 20, 2)
x
set.seed(1)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
rpois(10, 1)
rpois(10, 2)
rpois(10, 20)
ppois(2,2)
ppois(4,4)
ppois(4,2)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x + e
summary(y)
plot(x, y)
set.seed(10)
x <- rbinom(100, 1, 0.5)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x + e
summary(y)
plot(x,y)
set.seed(!)
set.seed(1)
x <- rnorm(100)
log.mu <- 0.5 + 0.3*x
y <- rpois(100, exp(log.mu))
summary(y)
plot(x,y)
set,seed(!)
set.seed(1)
sample(1:10, 4)
sample(4:50, 27)
sample(letters, 5)
sample(1:10)
sample(1:10)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
system.time(readLines("http://pittagoda.wordpress.com"))
system.time({})
?lm
set.seed(!)
set.seed(1)
rpois(2)
rpois(5, 2)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
set.seed(1)
rpois(5, 2)
?summaryRprof()
?system.time
library(swirl)
rm(list=ls())
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf -< num_vect <1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Deepa")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
TRU == TRUE
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints< 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
function(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("This is me")
submit()
submit()
submit()
mad_libs(Hyd, small, stone)
mad_libs("hyd", "small", "stone")
submit()
%p%("I", "love")
%p%("I", "love", "R")
submit()
submit()
info()
submit()
"I" %p "love" %p "R!"
'I' %p 'love' %p 'R!'
submit()
info()
'I' %p% 'love' %p% 'R!'
java -version
install.packages("rJava")
library
library(rJava)
R,version()
R.verson()
R.version()
R.Version()
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava',,'http://www.rforge.net/')
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
Sys.getenv("JAVA_HOME")
if (Sys.getenv("JAVA_HOME")!="")
Sys.setenv(JAVA_HOME="")
install.packages("rJava")
java -version
library(rJava)
java -version
java -version
install.packages(rJava)
install.packages("rJava")
library(rJava)
echo JAVA_HOME
Sys.setenv(JAVA_HOME='C:\Program Files\Java')
Sys.setenv(JAVA_HOME="C:\Program Files\Java")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java')
library(rJava)
install.packages('rJava', .libPaths()[1], 'http://www.rforge.net/')
library(rJava)
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.8.0_60')
library(rJava)
library(xlsx)
java -version
install.packages("xlsx")
install.packages("xlsx")
java -version
library(xlsx)
library(xlsx)
library(rJava)
r -version
source("http://www.openintro.org/stat/data/present.R")
present
dim(present)
names(present)
year
present(year)
View(present)
present$girls
plot(x = present$year, y = present$girls)
plot(x = present$year, y = present$girls, type = "1")
plot(x = present$year, y = present$girls, type = "l")
?plot
present$boys + present$ girls
present$boys + present$girls
plot(present$year, present$boys + present$girls, type = "l")
cummax(present$boys + present$girls)
x <- present$boys + present$girls
which.max(x)
present[which.max(x), ]
plot(present$year, present$boys/(present$boys + present$girls), type = "l")
plot(present$year, present$boys > present$girls, type = "l")
plot(present$year, present$boys/present$girls, type = "l")
plot(present$year, Mod(present$boys - present$girls), type = "l")
x <- Mod(present$boys - present$girls)
present[which.max(x), ]
install.packages("rvest")
library(rvest)
dripdata <- html("http://dir.indiamart.com/impcat/drip-irrigation-systems.html")
vignette("selectorgadget")
html("listing-address-container")
dripdata %>%
html_node("listing-address-container") %>%
html_text() %>%
as.numeric()
dripdata %>%
html_node("nbrd") %>%
html_text()
dripdata %>%
html_node(dripdata, nbrd) %>%
html_text( %>%)
dripdata %>%
html_node(dripdata, nbrd) %>%
html_text() %>%
as.numeric()
dripdata %>%
html_node(nbrd) %>%
html_text() %>%
as.numeric()
dripdata %>%
html_node("box nbrd") %>%
html_text() %>%
as.numeric()
sheet <- html_nodes(dripdata, ".nbrd")
sheet1 <- html_text(sheet)
drip <- html_table(sheet)
html_table(sheet)
html_table()
sheet()
sheet
sheet <- html_nodes(dripdata, ".nbrd")
source("http://www.openintro.org/stat/data/cdc.R")
names(cdc)
nrow(cdc)
dimnames(cs)
dimnames(cdc)
dim(cdc)
attr(cdc, cdc$weight)
?attr
attr(cdc$weight)
attributes(cdc$weight)
head(cdc$weight)
cdc$weight
head(cdc$gender)
head(cdc$smoke100)
length(x$gender == m)
x <- cdc[cdc$gender == m, ]
length(x)
x <- subset(cdc, cdc$gender == "m")
nrow(x)
hist(cdc$genhlth)
summary(cdc$weight)
table(cdc$smoke100)
table(cdc$smoke100)/20000
table(cdc$gender)
table(cdc$genhlth)/20000
gender_smokers = table(cdc$gender, cdc$smoke100)
mosaicplot(gender_smokers)
dim(cdc)
cdc[567, 6]
cdc[1:10, 6]
1:10
cdc[1:10, ]
under23_and_smoke <- subset(cdc, cdc$age < 23 & cdc$smoke100 == "1")
dim(under23_and_smoke)
boxplot(cdc$height)
summary(cdc$height)
boxplot(cdc$height ~ cdc$gender)
bmi <- (cdc$weight / cdc$height)
bmi <- (cdc$weight / cdc$height^2) * 703
boxplot(bmi ~ cdc$genhlth)
names(cdc$genhlth)
table(cdc$genhlth)
hist(cdc$age)
hist(bmi)
hist(bmi, breaks = 50)
plot(cdc$weight, cdc$wtdesire)
swirl()
library(swirl)
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
setwd()
getwd()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 && r_os == "linux-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(.cran, package)
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
filter(pack_sum, count > 679)
top_counts <- filter(pack_sum, count > 679)
top_counts
view(top_counts)
View(top_counts)
top_counts_stored <- arrange(top_counts, desc(count)
top_counts_stored <- arrange(top_counts, desc(count))
top_counts_sorted <- arrange(top_counts, desc(count))
view(top_counts_sorted)
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
arrange(top_unique, desc(count))
arrange(top_unique, desc(unique))
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count -grade)
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
submit()
extract_numeric("class5")
submit()
?mutate
submit()
submit()
sstudents
student4
students4
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sa
sat
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now(this_day)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
ymd(25081985)
dmy(25081985)
ymd("192012")
ymd("1/9/2012")
ymd("1\9\2012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, now())
this_moment <- update(this_moment, hours = 13, minutes = 02, seconds = 3)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tz = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
getwd()
setwd("..")
getwd()
setwd("./datasciencecoursera")
list.files()
library(downloader)
unzip("gettingproject.zip", "./")
unzip(gettingproject.zip, "./")
unzip(gettingproject.zip, exdir = "./")
unzip("gettingproject.zip", exdir = "./")
unzip("gettingproject.zip", exdir = ".")
list.files(gettingproject)
list.files()
list.dir()
setwd("./UCI HAR Dataset")
list.files()
getwd()
